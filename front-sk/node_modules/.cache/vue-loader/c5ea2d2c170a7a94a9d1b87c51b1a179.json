{"remainingRequest":"C:\\s02p12a404\\front-sk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\s02p12a404\\front-sk\\src\\views\\user\\Join.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\s02p12a404\\front-sk\\src\\views\\user\\Join.vue","mtime":1579244958805},{"path":"C:\\s02p12a404\\front-sk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579513168368},{"path":"C:\\s02p12a404\\front-sk\\node_modules\\babel-loader\\lib\\index.js","mtime":1579513167387},{"path":"C:\\s02p12a404\\front-sk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579513168368},{"path":"C:\\s02p12a404\\front-sk\\node_modules\\vue-loader\\lib\\index.js","mtime":1579513177664}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAnLi4vLi4vYXNzZXRzL2Nzcy9zdHlsZS5zY3NzJwppbXBvcnQgJy4uLy4uL2Fzc2V0cy9jc3MvdXNlci5zY3NzJwppbXBvcnQgUFYgZnJvbSAncGFzc3dvcmQtdmFsaWRhdG9yJwppbXBvcnQgKiBhcyBFbWFpbFZhbGlkYXRvciBmcm9tICdlbWFpbC12YWxpZGF0b3InOwppbXBvcnQgVXNlckFwaSBmcm9tICcuLi8uLi9hcGlzL1VzZXJBcGknCmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vLi4vcm91dGVzLmpzJwpleHBvcnQgZGVmYXVsdCB7CiAgICBjcmVhdGVkKCl7CiAgICAgICAgdGhpcy5wYXNzd29yZFNjaGVtYSAvLyDruYTrsIDrsojtmLgg7ZiV7IudIOyytO2BrAogICAgICAgICAgICAuaXMoKS5taW4oOCkKICAgICAgICAgICAgLmlzKCkubWF4KDEwMCkKICAgICAgICAgICAgLmhhcygpLmRpZ2l0cygpCiAgICAgICAgICAgIC5oYXMoKS5sZXR0ZXJzKCk7CiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgICAvLyBuaWNrTmFtZTogZnVuY3Rpb24gKHYpIHsKICAgICAgICAvLyAgICAgdGhpcy5jaGVja0Zvcm0oKTsKICAgICAgICAvLyB9LAogICAgICAgIGVtYWlsOiBmdW5jdGlvbiAodikgewogICAgICAgICAgICB0aGlzLmNoZWNrRm9ybSgpOwogICAgICAgIH0sCiAgICAgICAgcGFzc3dvcmQ6IGZ1bmN0aW9uICh2KSB7CiAgICAgICAgICAgIHRoaXMuY2hlY2tGb3JtKCk7CiAgICAgICAgfSwKICAgICAgICBwYXNzd29yZENvbmZpcm06IGZ1bmN0aW9uICh2KSB7CiAgICAgICAgICAgIHRoaXMuY2hlY2tGb3JtKCk7CiAgICAgICAgfSwKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgY2hlY2tGb3JtKCl7CiAgICAgICAgICAgIC8vIOuLieuEpOyehCAtLSDsnbTrr7jsgqzsmqnspJHsnbgg64uJ64Sk7J6E7J207JeQ7JqUCgogICAgICAgICAgICBpZiAodGhpcy5lbWFpbC5sZW5ndGggPiAwICYmICFFbWFpbFZhbGlkYXRvci52YWxpZGF0ZSh0aGlzLmVtYWlsKSkKICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IuZW1haWwgPSAi7J2066mU7J28IO2YleyLneydtCDslYTri5nri4jri6QuIgogICAgICAgICAgICBlbHNlIHRoaXMuZXJyb3IuZW1haWwgPSBmYWxzZTsKCiAgICAgICAgICAgIGlmICh0aGlzLnBhc3N3b3JkLmxlbmd0aCA+IDAgJiYgIXRoaXMucGFzc3dvcmRTY2hlbWEudmFsaWRhdGUodGhpcy5wYXNzd29yZCkpCiAgICAgICAgICAgICAgICB0aGlzLmVycm9yLnBhc3N3b3JkID0gJ+yYgeusuCzsiKvsnpAg7Y+s7ZWoIDgg7J6Q66as7J207IOB7J207Ja07JW8IO2VqeuLiOuLpC4nCiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IucGFzc3dvcmQgPSBmYWxzZTsKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmKCAhdGhpcy5lcnJvci5wYXNzd29yZCApewogICAgICAgICAgICAgICAgaWYodGhpcy5wYXNzd29yZENvbmZpcm0ubGVuZ3RoID4wICYmIHRoaXMucGFzc3dvcmQgIT0gdGhpcy5wYXNzd29yZENvbmZpcm0pCiAgICAgICAgICAgICAgICAgICAgdGhpcy5lcnJvci5wYXNzd29yZENvbmZpcm0gPSAi67mE67CA67KI7Zi46rCAIOydvOy5mO2VmOyngCDslYrsirXri4jri6QuIgogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IucGFzc3dvcmRDb25maXJtID0gZmFsc2U7CgoKICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5lcnJvcikKICAgICAgICAgICAgbGV0IGlzU3VibWl0ID0gdHJ1ZTsKICAgICAgICAgICAgaWYodGhpcy5lbWFpbC5sZW5ndGg+MCAmJiB0aGlzLnBhc3N3b3JkLmxlbmd0aD4wICYmIHRoaXMucGFzc3dvcmRDb25maXJtLmxlbmd0aD4wKSBpc1N1Ym1pdCA9IHRydWU7CgogICAgICAgICAgICBPYmplY3QudmFsdWVzKHRoaXMuZXJyb3IpLm1hcCh2ID0+IHsKICAgICAgICAgICAgICAgIGlmICh2KSB7CiAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2codikKICAgICAgICAgICAgICAgICAgICBpc1N1Ym1pdCA9IGZhbHNlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLmlzU3VibWl0ID0gaXNTdWJtaXQ7CiAgICAgICAgfSwKICAgICAgICBqb2luKCl7CiAgICAgICAgICAgIGlmKHRoaXMuaXNTdWJtaXQpewogICAgICAgICAgICAgICAgbGV0IHtlbWFpbCxuaWNrTmFtZSxwYXNzd29yZH0gPSB0aGlzOwogICAgICAgICAgICAgICAgbGV0IGRhdGEgPSB7CiAgICAgICAgICAgICAgICAgICAgZW1haWwsbmlja05hbWUscGFzc3dvcmQKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhyb3V0ZXIpCiAgICAgICAgICAgICAgICB0aGlzLmlzU3VibWl0ID0gZmFsc2U7CgogICAgICAgICAgICAgICAgVXNlckFwaS5yZXF1ZXN0Sm9pbihkYXRhLHJlcz0+ewogICAgICAgICAgICAgICAgICAgIC8v7Ya17Iug7J2EIO2Gte2VtCDsoITri6zrsJvsnYAg6rCSIOy9mOyGlOyXkCDstpzroKUKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn7ZqM7JuQ6rCA7J6F7JeQIOyEseqzte2VmOyYgOyKteuLiOuLpCEhJykKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwoKICAgICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiam9pbi9kb25lLyIpOwogICAgICAgICAgICAgICAgfSxlcnJvcj0+eyAgCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIu2ajOybkOqwgOyehSDsi6TtjKggISEhIik7CiAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ+2ajOybkOqwgOyehSDsi6TtjKggISEnKQogICAgICAgICAgICAgICAgICAgIC8vIOuhnOq3uOyduCDsi6TtjKjsi5wg67KE7Yq8IOu5hO2ZnOyEse2ZlAogICAgICAgICAgICAgICAgICAgIHRoaXMuaXNTdWJtaXQgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0pCgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+2ajOybkOqwgOyehSDrgZ0nKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIGRhdGE6ICgpID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBlbWFpbDogJycsCiAgICAgICAgICAgIHBhc3N3b3JkOiAnJywKICAgICAgICAgICAgcGFzc3dvcmRDb25maXJtOiAnJywKICAgICAgICAgICAgbmlja05hbWU6ICcnLAogICAgICAgICAgICBpc1Rlcm06IGZhbHNlLCAvLyDslb3qtIDrj5nsnZgKICAgICAgICAgICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgICAgICAgICAgcGFzc3dvcmRTY2hlbWE6IG5ldyBQVigpLAogICAgICAgICAgICBlcnJvcjogeyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBlbWFpbDogZmFsc2UsCiAgICAgICAgICAgICAgICBwYXNzd29yZDogZmFsc2UsCiAgICAgICAgICAgICAgICBuaWNrTmFtZTogZmFsc2UsCiAgICAgICAgICAgICAgICBwYXNzd29yZENvbmZpcm06IGZhbHNlLAogICAgICAgICAgICAgICAgdGVybTogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaXNTdWJtaXQ6IGZhbHNlLAogICAgICAgICAgICBwYXNzd29yZFR5cGU6ICJwYXNzd29yZCIsCiAgICAgICAgICAgIHBhc3N3b3JkQ29uZmlybVR5cGU6ICJwYXNzd29yZCIsCiAgICAgICAgICAgIHRlcm1Qb3B1cDogZmFsc2UsCiAgICAgICAgfQogICAgfQoKfQoK"},{"version":3,"sources":["Join.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Join.vue","sourceRoot":"src/views/user","sourcesContent":["\r\n<!--\r\n    가입하기는 기본적인 폼만 제공됩니다\r\n    기능명세에 따라 개발을 진행하세요.\r\n    Sub PJT I에서는 UX, 디자인 등을 포함하여 백엔드를 제외하여 개발합니다.\r\n -->\r\n<template>\r\n    <div class=\"user\" id=\"join\">\r\n         <div class=\"wrapC\">\r\n\r\n        <h1>가입하기</h1>\r\n        <div >\r\n            <div class=\"input-with-label\">\r\n                <input v-model=\"nickName\" \r\n                       @keyup.enter=\"join\"\r\n                       id=\"nickname\"\r\n                       placeholder=\"닉네임을 입력하세요.\" type=\"text\"/>\r\n                <label for=\"nickname\">닉네임</label>\r\n            </div>\r\n\r\n            <div class=\"input-with-label\">\r\n                <input v-model=\"email\" v-bind:class=\"{error : error.email, complete:!error.email&&email.length!==0}\"\r\n                       @keyup.enter=\"join\"\r\n                       id=\"email\" placeholder=\"이메일을 입력하세요.\"\r\n                       type=\"text\"/>\r\n                <label for=\"email\">이메일</label>\r\n                <div class=\"error-text\" v-if=\"error.email\">\r\n                    {{error.email}}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"input-with-label\">\r\n                <input v-model=\"password\"\r\n                        @keyup.enter=\"join\"\r\n                       id=\"password\" :type=\"passwordType\"\r\n                       placeholder=\"비밀번호를 입력하세요.\"/>\r\n                <label for=\"password\">비밀번호</label>\r\n                <div class=\"error-text\" v-if=\"error.password\">\r\n                    {{error.password}}\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"input-with-label\">\r\n                <input v-model=\"passwordConfirm\" :type=\"passwordConfirmType\"\r\n                        id=\"password-confirm\"\r\n                       placeholder=\"비밀번호를 다시한번 입력하세요.\"/>\r\n                <label for=\"password-confirm\">비밀번호 확인</label>\r\n                <div class=\"error-text\" v-if=\"error.password\">\r\n                    {{error.passwordConfirm}}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <label >\r\n            <input v-model=\"isTerm\" type=\"checkbox\" id=\"term\"/>\r\n            <span>약관을 동의합니다.</span>\r\n        </label>\r\n\r\n        <span @click=\"termPopup=true\">약관보기</span>\r\n\r\n        <button class=\"btn btn--back btn--join\" v-on:click=\"join\" :disabled=\"!isSubmit\"\r\n                :class=\"{disabled : !isSubmit}\">\r\n            가입하기\r\n        </button>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import '../../assets/css/style.scss'\r\n    import '../../assets/css/user.scss'\r\n    import PV from 'password-validator'\r\n    import * as EmailValidator from 'email-validator';\r\n    import UserApi from '../../apis/UserApi'\r\n    import router from '../../routes.js'\r\n    export default {\r\n        created(){\r\n            this.passwordSchema // 비밀번호 형식 체크\r\n                .is().min(8)\r\n                .is().max(100)\r\n                .has().digits()\r\n                .has().letters();\r\n        },\r\n        watch: {\r\n            // nickName: function (v) {\r\n            //     this.checkForm();\r\n            // },\r\n            email: function (v) {\r\n                this.checkForm();\r\n            },\r\n            password: function (v) {\r\n                this.checkForm();\r\n            },\r\n            passwordConfirm: function (v) {\r\n                this.checkForm();\r\n            },\r\n        },\r\n        methods: {\r\n            checkForm(){\r\n                // 닉네임 -- 이미사용중인 닉네임이에요\r\n\r\n                if (this.email.length > 0 && !EmailValidator.validate(this.email))\r\n                    this.error.email = \"이메일 형식이 아닙니다.\"\r\n                else this.error.email = false;\r\n\r\n                if (this.password.length > 0 && !this.passwordSchema.validate(this.password))\r\n                    this.error.password = '영문,숫자 포함 8 자리이상이어야 합니다.'\r\n                else\r\n                    this.error.password = false;\r\n                \r\n                if( !this.error.password ){\r\n                    if(this.passwordConfirm.length >0 && this.password != this.passwordConfirm)\r\n                        this.error.passwordConfirm = \"비밀번호가 일치하지 않습니다.\"\r\n                }\r\n                else\r\n                    this.error.passwordConfirm = false;\r\n\r\n\r\n                console.log(this.error)\r\n                let isSubmit = true;\r\n                if(this.email.length>0 && this.password.length>0 && this.passwordConfirm.length>0) isSubmit = true;\r\n\r\n                Object.values(this.error).map(v => {\r\n                    if (v) {\r\n                        // console.log(v)\r\n                        isSubmit = false;\r\n                    }\r\n                })\r\n                this.isSubmit = isSubmit;\r\n            },\r\n            join(){\r\n                if(this.isSubmit){\r\n                    let {email,nickName,password} = this;\r\n                    let data = {\r\n                        email,nickName,password\r\n                    }\r\n\r\n                    // console.log(router)\r\n                    this.isSubmit = false;\r\n\r\n                    UserApi.requestJoin(data,res=>{\r\n                        //통신을 통해 전달받은 값 콘솔에 출력\r\n                        console.log('회원가입에 성공하였습니다!!')\r\n                        console.log(res);\r\n\r\n                        this.$router.push(\"join/done/\");\r\n                    },error=>{  \r\n                        console.log(\"회원가입 실패 !!!\");\r\n                        alert('회원가입 실패 !!')\r\n                        // 로그인 실패시 버튼 비활성화\r\n                        this.isSubmit = false;\r\n                    })\r\n\r\n                    console.log('회원가입 끝')\r\n                }\r\n            }\r\n        },\r\n        data: () => {\r\n            return {\r\n                email: '',\r\n                password: '',\r\n                passwordConfirm: '',\r\n                nickName: '',\r\n                isTerm: false, // 약관동의\r\n                isLoading: false,\r\n                passwordSchema: new PV(),\r\n                error: {                                      \r\n                    email: false,\r\n                    password: false,\r\n                    nickName: false,\r\n                    passwordConfirm: false,\r\n                    term: false\r\n                },\r\n                isSubmit: false,\r\n                passwordType: \"password\",\r\n                passwordConfirmType: \"password\",\r\n                termPopup: false,\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n</script>\r\n\r\n\r\n"]}]}